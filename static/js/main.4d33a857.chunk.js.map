{"version":3,"sources":["states/index.js","selector/index.js","constants/index.js","assets/plastic_kits/bg1.svg","assets/plastic_kits/bg2.svg","assets/plastic_kits/bg3.svg","components/PlasticTrash.js","assets/animation_kits/whale.gif","assets/animation_kits/turtle.gif","assets/animation_kits/seagull.gif","components/EnvChart.js","assets/icons/logo_main.svg","components/Menu.js","components/Main.js","App.js","index.js"],"names":["plasticState","atom","key","default","plasticPercentState","selector","get","toFixed","STATIC_DENSITY","PlasticTrash","boxRef","useRef","canvasRef","useState","constraints","setConstraints","scene","setScene","initialized","setInitialized","useRecoilState","numPlastics","setNumPlastics","plasticPercent","useRecoilValue","handleResize","useCallback","current","getBoundingClientRect","handleClick","addPlastic","iteration","width","randomX","Math","floor","random","plastic","i","push","Bodies","circle","restitution","setTimeout","World","add","engine","world","resizeRect","rect","side","height","posX","posY","topLeftX","topLeftY","topRightX","topRightY","bottomRightX","bottomRightY","bottomLeftX","bottomLeftY","Body","setPosition","x","y","setVertices","useEffect","Engine","create","render","Render","element","canvas","options","background","wireframes","box","map","rectangle","isStatic","fillStyle","run","window","addEventListener","removeEventListener","bounds","max","bodies","type","style","cursor","display","textAlign","marginBottom","onClick","position","ref","color","fontWeight","fontSize","top","left","transform","src","bg3","bg2","bg1","zIndex","alt","EnvChart","modalVisible","setModalVisible","handleMouseEnter","e","animationElement","target","animationPlayState","webkitAnimationPlayState","tooltip","document","getElementsByClassName","visibility","handleMouseLeave","className","onMouseEnter","onMouseLeave","whale","turtle","seagull","Menu","id","to","logoMain","Main","href","App","exact","path","currentUserPlastic","currentUserPlasticPercent","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4d33a857.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { atom } from 'recoil';\n\nconst plasticState = atom({\n  key: 'plasticState',\n  default: 0,\n});\n\nexport { plasticState };\n","/* eslint-disable import/prefer-default-export */\nimport { selector } from 'recoil';\nimport { plasticState } from '../states';\nimport { PLASTIC_MAX } from '../constants';\n\nconst plasticPercentState = selector({\n  key: 'plasticPercentState',\n  get: ({ get }) => {\n    const numPlastic = get(plasticState);\n\n    return ((numPlastic / PLASTIC_MAX) * 100).toFixed(0);\n  },\n});\n\nexport { plasticPercentState };\n","const PLASTIC_MAX = 30;\nconst BLUE_THRESHOLD = 60;\nconst RED_THRESHOLD = 80;\n\nexport { PLASTIC_MAX, BLUE_THRESHOLD, RED_THRESHOLD };\n","export default __webpack_public_path__ + \"static/media/bg1.203a0d0f.svg\";","export default __webpack_public_path__ + \"static/media/bg2.a9ae58bf.svg\";","export default __webpack_public_path__ + \"static/media/bg3.2be3f16e.svg\";","/* eslint-disable no-use-before-define */\n/* eslint-disable react/prop-types */\n/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { Engine, Render, World, Body, Bodies } from 'matter-js';\nimport { plasticState } from '../states';\nimport { plasticPercentState } from '../selector';\nimport { BLUE_THRESHOLD, RED_THRESHOLD } from '../constants';\nimport bg1 from '../assets/plastic_kits/bg1.svg';\nimport bg2 from '../assets/plastic_kits/bg2.svg';\nimport bg3 from '../assets/plastic_kits/bg3.svg';\n\nconst STATIC_DENSITY = 15;\nconst PARTICLE_SIZE = 40;\nconst PARTICLE_BOUNCINESS = 0.5;\n\n// console.log(document.getElementById('plastic1'));\n\nconst PlasticTrash = () => {\n  const boxRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const [constraints, setConstraints] = useState();\n  const [scene, setScene] = useState();\n  const [initialized, setInitialized] = useState(false);\n  const [numPlastics, setNumPlastics] = useRecoilState(plasticState);\n  const plasticPercent = useRecoilValue(plasticPercentState);\n\n  const handleResize = useCallback(() => {\n    setConstraints(boxRef.current.getBoundingClientRect());\n  });\n\n  const handleClick = useCallback(() => {\n    if (scene) {\n      addPlastic(1);\n      setNumPlastics(numPlastics + 1);\n    }\n  });\n\n  const addPlastic = (iteration = 1) => {\n    if (constraints) {\n      const { width } = constraints;\n\n      const randomX = Math.floor(Math.random() * -width) + width;\n      //   const arrow = Vertices.fromPath(\n      //     '40 0 40 20 100 20 100 80 40 80 40 100 0 50',\n      //   );\n      //   const plastic = [\n      //     Svg.pathToVertices(document.getElementById('plastic1'), 30),\n      //   ];\n\n      // Bodies.fromVertices(\n      //   randomX,\n      //   0,\n      //   plastic,\n      //   {\n      //     render: {\n      //       fillStyle: '#556270',\n      //       strokeStyle: '#556270',\n      //       lineWidth: 1,\n      //     },\n      //   },\n      //   true,\n      // ),\n      const plastic = [];\n      for (let i = 0; i < iteration; i += 1) {\n        plastic.push(\n          Bodies.circle(randomX, -PARTICLE_SIZE, PARTICLE_SIZE, {\n            restitution: PARTICLE_BOUNCINESS,\n          }),\n        );\n      }\n      setTimeout(() => {\n        World.add(scene.engine.world, plastic);\n      }, 500);\n    }\n  };\n\n  const resizeRect = (rect, side, width, height) => {\n    let [posX, posY] = [0, 0];\n    let [topLeftX, topLeftY] = [0, 0];\n    let [topRightX, topRightY] = [0, 0];\n    let [bottomRightX, bottomRightY] = [0, 0];\n    let [bottomLeftX, bottomLeftY] = [0, 0];\n\n    switch (side) {\n      case 'floor':\n        [posX, posY] = [width / 2, height + STATIC_DENSITY / 2];\n        [topLeftX, topLeftY] = [0, height];\n        [topRightX, topRightY] = [width, height];\n        [bottomRightX, bottomRightY] = [width, height + STATIC_DENSITY];\n        [bottomLeftX, bottomLeftY] = [0, height + STATIC_DENSITY];\n        break;\n      case 'left':\n        [posX, posY] = [-STATIC_DENSITY / 2, 500];\n        [topLeftX, topLeftY] = [0, -500];\n        [topRightX, topRightY] = [STATIC_DENSITY, -500];\n        [bottomRightX, bottomRightY] = [STATIC_DENSITY, height * 2];\n        [bottomLeftX, bottomLeftY] = [0, height * 2];\n        break;\n      case 'right':\n        [posX, posY] = [width + STATIC_DENSITY / 2, 500];\n        [topLeftX, topLeftY] = [width - STATIC_DENSITY, -500];\n        [topRightX, topRightY] = [width, -500];\n        [bottomRightX, bottomRightY] = [width, height * 2];\n        [bottomLeftX, bottomLeftY] = [width - STATIC_DENSITY, height * 2];\n        break;\n      default:\n        break;\n    }\n    Body.setPosition(rect, {\n      x: posX,\n      y: posY,\n    });\n    Body.setVertices(rect, [\n      { x: topLeftX, y: topLeftY },\n      { x: topRightX, y: topRightY },\n      { x: bottomRightX, y: bottomRightY },\n      { x: bottomLeftX, y: bottomLeftY },\n    ]);\n  };\n\n  useEffect(() => {\n    const { width, height } = constraints || {};\n    const engine = Engine.create({});\n    const render = Render.create({\n      element: boxRef.current,\n      engine,\n      canvas: canvasRef.current,\n      options: {\n        width,\n        height,\n        background: 'transparent',\n        wireframes: false,\n      },\n    });\n    const box = [1, 2, 3].map(() =>\n      Bodies.rectangle(0, 0, 0, STATIC_DENSITY, {\n        isStatic: true,\n        render: {\n          fillStyle: 'blue',\n        },\n      }),\n    );\n\n    World.add(engine.world, box);\n    Engine.run(engine);\n    Render.run(render);\n\n    setConstraints(boxRef.current.getBoundingClientRect());\n    setScene(render);\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (constraints) {\n      const { width, height } = constraints;\n      // Dynamically update canvas and bounds\n      scene.bounds.max.x = width;\n      scene.bounds.max.y = height;\n      scene.options.width = width;\n      scene.options.height = height;\n      scene.canvas.width = width;\n      scene.canvas.height = height;\n      // Dynamically update floor\n      const box = scene.engine.world.bodies;\n      resizeRect(box[0], 'floor', width, height);\n      resizeRect(box[1], 'left', width, height);\n      resizeRect(box[2], 'right', width, height);\n\n      if (!initialized) {\n        addPlastic(numPlastics);\n        setInitialized(!initialized);\n      }\n    }\n  }, [scene, constraints]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        style={{\n          cursor: 'pointer',\n          display: 'block',\n          width: '300px',\n          textAlign: 'center',\n          marginBottom: '16px',\n        }}\n        onClick={() => handleClick()}\n      >\n        Generate\n      </button>\n      <div style={{ position: 'relative', width: '300px', height: '608px' }}>\n        <div\n          ref={boxRef}\n          style={{\n            width: '100%',\n            height: '100%',\n            textAlign: 'center',\n          }}\n        >\n          <p\n            style={{\n              position: 'absolute',\n              color: 'white',\n              fontWeight: 'bold',\n              fontSize: '38px',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -25%)',\n            }}\n          >\n            {`${plasticPercent}%`}\n          </p>\n          <img\n            src={\n              plasticPercent >= RED_THRESHOLD\n                ? bg3\n                : plasticPercent >= BLUE_THRESHOLD\n                ? bg2\n                : bg1\n            }\n            style={{ position: 'absolute', zIndex: -1 }}\n            alt=\"bg\"\n          />\n          <canvas ref={canvasRef} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PlasticTrash;\n","export default __webpack_public_path__ + \"static/media/whale.20dfde24.gif\";","export default __webpack_public_path__ + \"static/media/turtle.949c3292.gif\";","export default __webpack_public_path__ + \"static/media/seagull.8c3d29ab.gif\";","/* eslint-disable jsx-a11y/accessible-emoji */\n/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/mouse-events-have-key-events */\nimport React, { useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { plasticPercentState } from '../selector';\nimport whale from '../assets/animation_kits/whale.gif';\nimport turtle from '../assets/animation_kits/turtle.gif';\nimport seagull from '../assets/animation_kits/seagull.gif';\nimport './EnvChart.css';\n\nconst EnvChart = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const plasticPercent = useRecoilValue(plasticPercentState);\n\n  const handleMouseEnter = (e) => {\n    const animationElement = e.target;\n    animationElement.style.animationPlayState = 'paused';\n    animationElement.style.webkitAnimationPlayState = 'paused';\n  };\n\n  const handleClick = (target) => {\n    const tooltip = document.getElementsByClassName('tooltiptext')[0];\n    setModalVisible(!modalVisible);\n    const visibility = modalVisible ? 'visible' : 'hidden';\n    tooltip.style.visibility = visibility;\n  };\n\n  const handleMouseLeave = (e) => {\n    const animationElement = e.target;\n    animationElement.style.animationPlayState = 'running';\n    animationElement.style.webkitAnimationPlayState = 'running';\n  };\n\n  return (\n    <div className=\"chart\" onClick={handleClick}>\n      <div\n        className=\"tooltip whale-anim\"\n        onMouseEnter={handleMouseEnter}\n        onClick={handleClick}\n        onMouseLeave={handleMouseLeave}\n      >\n        <img src={whale} alt=\"whale\" className=\"object whale\" />\n      </div>\n      <div\n        className=\"tooltip turtle-anim\"\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <img src={turtle} alt=\"turtle\" className=\"object turtle\" />\n      </div>\n      <div\n        className=\"tooltip seagull-anim\"\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <img src={seagull} alt=\"seagull\" className=\"object seagull\" />\n      </div>\n      <div className=\"tooltiptext\">\n        <pre>\n          {`Your monthly usage: ${plasticPercent}%\\n\\nYou have saved\\nN seagulls\\nM turtles\\n or O whales`}\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nexport default EnvChart;\n","export default __webpack_public_path__ + \"static/media/logo_main.8a82be9a.svg\";","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { Link } from 'react-router-dom';\nimport logoMain from '../assets/icons/logo_main.svg';\nimport { plasticPercentState } from '../selector';\n\nconst Menu = () => {\n  const plasticPercent = useRecoilValue(plasticPercentState);\n  return (\n    <>\n      <header id=\"menu-header\">\n        <Link to=\"/CAGO-Frontend\">\n          <img src={logoMain} style={{ width: '50px' }} alt=\"logo main\" />\n        </Link>\n        <span id=\"menu-span\">Current plastic: {plasticPercent}%</span>\n      </header>\n\n      <ul>\n        <li>\n          <Link to=\"/trash\">Trash</Link>\n        </li>\n        <li>\n          <Link to=\"/chart\">Chart</Link>\n        </li>\n      </ul>\n      <hr />\n    </>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\n\nconst Main = () => {\n  return (\n    <div>\n      <h3>CAGO Playground</h3>\n      <p>for Junction 2020 Connected</p>\n      <pre>\n        <a href=\"https://www.linkedin.com/in/sang-uk-lee/\">\n          Sean (Sang-Uk) Lee\n        </a>\n        {` | sean.sanguk.lee@gmail.com\\n`}\n        <a href=\"https://www.linkedin.com/in/jongwon-park-41a170177\">\n          Jongwon Park\n        </a>\n        {` | whddnjs761@gmail.com\\n`}\n        <a href=\"https://www.linkedin.com/in/timkim0713/\">Daekyung Kim</a>\n        {` | daekyung.kim@stonybrook.edu\\n`}\n        <a href=\"https://linkedin.com/in/hanbin-baik\">Hanbin Baik</a>\n        {` | hanbini96@gmail.com`}\n      </pre>\n      <p>Nov. 6th ~ Nov. 8th, 2020</p>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport PlasticTrash from './components/PlasticTrash';\nimport EnvChart from './components/EnvChart';\nimport Menu from './components/Menu';\nimport Main from './components/Main';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Menu />\n      <Route exact path=\"/CAGO-Frontend\" render={() => <Main />} />\n      <Route\n        path=\"/trash\"\n        render={() => <PlasticTrash currentUserPlastic={10} />}\n      />\n      <Route\n        path=\"/chart\"\n        render={() => <EnvChart currentUserPlasticPercent={60} />}\n      />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}